
Wargame Map Object.
===================

2D array which corresponds to each tile of the game map, describing the cost of movement to that tile
- Movement cost from 0-9
- A value of 99 specifies impassable terrain
- A value of 100 specifies another unit on this tile, thus you cannot travel on this tile
--- The extension should treat the above two values as having the same effect

ACTIONS
- Set width of map
- Set height of map
- Set cost of movement for a tile (X, Y, Cost)
- Calculate path (Start X, Start Y, End X, End Y)
- Next movement
- Previous movement
- Reset movement to start


CONDITIONS
- Compare to cost of movement for a tile (X, Y)
- Is tile impassable?
- Does a valid path exist?
- Compare to the total cost of the path
- Compare to the number of movements in the path
- Compare to the total cost from the beginning to a specified movement (Movement index)
- Compare to the direction of a specified movement (Movement index)
- Compare to the total cost from the beginning to the current movement
- Compare to the direction of the current movement
- Have we reached the end of the path?

EXPRESSIONS
- Get width of map
- Get height of map
- Get cost of movement for a tile (X, Y)
- Get the total cost of the entire path
- Get the number of movements in the path
- Get the total cost from the beginning to a specified movement (Movement index)
- Get direction of a single movement (Movement index)
- Get X coordinate of a single movement (Movement index)
- Get Y coordinate of a single movement (Movement index)
- Get X coordinate of the starting point
- Get Y coordinate of the starting point
- Get X coordinate of the destination point
- Get Y coordinate of the destination point
- Get the index of the current movement
- Get the total cost from the beginning to a specified movement
- Get the direction of the current movement
- Get X coordinate of the current movement
- Get Y coordinate of the current movement


The map consists of hexagonal tiles with a fixed number of rows for each column. The tile (1, 1) is placed at the very left of the map and half a tile below the top of the map. The tile (2, 1) is north-east of tile (1, 1), placing it at the very top of the map. All tiles in a column have exactly the same real-world X position (thus all tiles in the first column are at the very left of the map); all tiles in a row alternate between position (Y * hexagon height) for even columns and ((Y + 0.5) * hexagon height) for odd columns.

The pathfinding algorithm assumes the map to have these properties, meaning that for some tile (X, Y) the locations north-west (X - 1, Y - 1), south-west (X - 1, Y), north (X, Y - 1), south (X, Y + 1), north-east (X + 1, Y - 1) and south-east (X + 1, Y) are considered adjacent.

The extension computes the least-costly route from one position to another, then store the path as a series of directions from the previous location. The directions are represented in the same manner as the keyboard number pad, so that 1 is south-west, 2 is south, 3 is south-east, 7 is north-west, 8 is north, 9 is north-east. If the first step of the path goes from (3, 3) to (3, 2) this is a move north, so is represented as 8. The actual coordinates of each step in the path will also be available.

The extension provides an internal counter to iterate through each movement of the path. The counter will reset when a new path is generated.

* Please note more options may have been added or changed since this file was written.

This object was created for the book Going to War, Creating computer Wargames, available in Feb/March 2009 from Course Technology PTR/Delmar - if you need detailed examples and instructions we recommend this book.