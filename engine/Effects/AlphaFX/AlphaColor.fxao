// AlphaColor

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;

uniform vec4 alphaColor;
uniform bool keepAlpha;

uniform sampler2D imgTexture;

uniform lowp vec4 blendColor;

void main(void)
{
    vec4 color = texture2D(imgTexture, textureCoordinate);
	if (color.rgb == alphaColor.xyz) { 
		color.a = 0.0;
	} else if (!keepAlpha) {
		color.a = 1.0;
	}
		
	color *= blendColor;
	
	gl_FragColor = color ;
}
//@End